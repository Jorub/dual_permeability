#include "intp.h"
#include <stdio.h>
#include "iotools.h"

/**
   function assembles coordinates of integration point on segment <-1;1>
   numerical Gauss integration is assumed
   
   @param gp - array of coordinates
   @param w - array of weigths
   @param order - order of numerical integration
   
   order means the highest order of exactly integrated polynomial
*/
void gauss_points (double *gp,double *w,long order)
{
  switch (order){
  case 1:{
    //  order 1
    gp[0]=0.0;
    w[0]=2.0;
    break;
  }
  case 2:{
    //  order 3
    gp[0]=-0.577350269189626;
    gp[1]= 0.577350269189626;

    w[0]=1.0;
    w[1]=1.0;

    break;
  }
  case 3:{
    //  order 5
    gp[0]=-0.774596669241483;
    gp[1]= 0.0;
    gp[2]= 0.774596669241483;

    w[0]=0.5555555555555555;
    w[1]=0.8888888888888888;
    w[2]=0.5555555555555555;

    break;
  }
  case 4:{
    //  order 7
    gp[0]=-0.861136311594053;
    gp[1]=-0.339981043584856;
    gp[2]= 0.339981043584856;
    gp[3]= 0.861136311594053;

    w[0]=0.347854845137454;
    w[1]=0.652145154862546;
    w[2]=0.652145154862546;
    w[3]=0.347854845137454;

    break;
  }
  case 5:{
    //  order 9
    gp[0] =-0.906179845938644;
    gp[1] =-0.538469310105683;
    gp[2] = 0.0;
    gp[3] = 0.538469310105683;
    gp[4] = 0.906179845938644;

    w[0] = 0.236926885056189;
    w[1] = 0.478628670499366;
    w[2] = 0.568888888888889;
    w[3] = 0.478628670499366;
    w[4] = 0.236926885056189;
    
    break;
  }
  case 6:{
    //  order 11
    gp[0]=-0.932469514203152;
    gp[1]=-0.661209386466265;
    gp[2]=-0.238619186083197;
    gp[3]= 0.238619186083197;
    gp[4]= 0.661209386466265;
    gp[5]= 0.932469514203152;

    w[0] = 0.171324492379170;
    w[1] = 0.360761573048139;
    w[2] = 0.467913934572691;
    w[3] = 0.467913934572691;
    w[4] = 0.360761573048139;
    w[5] = 0.171324492379170;
    
    break;
  }
  default:{
    print_err("unknown integration order is required", __FILE__, __LINE__, __func__);
  }
  }
}



/**
   function assembles coordinates of integration points on triangle
   
   @param gp1,gp2 - arrays containing area coordinates L_1 and L_2
   @param w - array of weigths
   @param order - order of numerical integration
   
   22.8.1997
*/
void gauss_points_tr (double *gp1,double *gp2,double *w,long order)
{
  switch(order){
  case 1:{
    //  order 1
    gp1[0]=0.333333333333333;

    gp2[0]=0.333333333333333;

    w[0]=0.5;

    break;
  }
  case 3:{
    //  order 2
    gp1[0]=0.1666666666666667;
    gp1[1]=0.6666666666666667;
    gp1[2]=0.1666666666666667;
    
    gp2[0]=0.1666666666666667;
    gp2[1]=0.1666666666666667;
    gp2[2]=0.6666666666666667;
    
    w[0]=0.1666666666666667;
    w[1]=0.1666666666666667;
    w[2]=0.1666666666666667;
    
    break;
  }
  case 4:{
    gp1[0]=0.2;
    gp1[1]=0.6;
    gp1[2]=0.2;
    gp1[3]=0.333333333333333;
    
    gp2[0]=0.2;
    gp2[1]=0.2;
    gp2[2]=0.6;
    gp2[3]=0.333333333333333;

    w[0] =  0.260416666666667;
    w[1] =  0.260416666666667;
    w[2] =  0.260416666666667;
    w[3] = -0.28125;

    break;
  }
  case 6:{
    //  order 4
    gp1[0]=0.816847572980459;
    gp1[1]=0.091576213509771;
    gp1[2]=0.091576213509771;
    gp1[3]=0.108103018168070;
    gp1[4]=0.445948490915965;
    gp1[5]=0.445948490915965;

    gp2[0]=0.091576213509771;
    gp2[1]=0.816847572980459;
    gp2[2]=0.091576213509771;
    gp2[3]=0.445948490915965;
    gp2[4]=0.108103018168070;
    gp2[5]=0.445948490915965;

    w[0]=0.054975871827661;
    w[1]=0.054975871827661;
    w[2]=0.054975871827661;
    w[3]=0.111690794839005;
    w[4]=0.111690794839005;
    w[5]=0.111690794839005;
    
    break;
  }
  case 7:{
    //  order 5
    gp1[0]=0.333333333333333;
    gp1[1]=0.059715871798770;
    gp1[2]=0.470142064105115;
    gp1[3]=0.470142064105115;
    gp1[4]=0.797426985353087;
    gp1[5]=0.101286507323456;
    gp1[6]=0.101286507323456;
    
    gp2[0]=0.333333333333333;
    gp2[1]=0.470142064105115;
    gp2[2]=0.059715871798770;
    gp2[3]=0.470142064105115;
    gp2[4]=0.101286507323456;
    gp2[5]=0.797426985353087;
    gp2[6]=0.101286507323456;
    
    w[0]=0.1125;
    w[1]=0.066197076394253;
    w[2]=0.066197076394253;
    w[3]=0.066197076394253;
    w[4]=0.066197076394253;
    w[5]=0.066197076394253;
    w[6]=0.066197076394253;
    
    break;
  }
  case 12:{
    //  order 6
    gp1[0] = 0.873821971016996;
    gp1[1] = 0.063089014491502;
    gp1[2] = 0.063089014491502;
    gp1[3] = 0.501426509658179;
    gp1[4] = 0.249286745170910;
    gp1[5] = 0.249286745170910;
    gp1[6] = 0.636502499121399;
    gp1[7] = 0.310352451033785;
    gp1[8] = 0.053145049844816;
    gp1[9] = 0.636502499121399;
    gp1[10]= 0.310352451033785;
    gp1[11]= 0.053145049844816;
    
    gp2[0] = 0.063089014491502;
    gp2[1] = 0.873821971016996;
    gp2[2] = 0.063089014491502;
    gp2[3] = 0.249286745170910;
    gp2[4] = 0.501426509658179;
    gp2[5] = 0.249286745170910;
    gp2[6] = 0.310352451033785;
    gp2[7] = 0.053145049844816;
    gp2[8] = 0.636502499121399;
    gp2[9] = 0.053145049844816;
    gp2[10]= 0.636502499121399;
    gp2[11]= 0.310352451033785;
    
    w[0] = 0.025422453185103;
    w[1] = 0.025422453185103;
    w[2] = 0.025422453185103;
    w[3] = 0.058393137863189;
    w[4] = 0.058393137863189;
    w[5] = 0.058393137863189;
    w[6] = 0.041425537809187;
    w[7] = 0.041425537809187;
    w[8] = 0.041425537809187;
    w[9] = 0.041425537809187;
    w[10]= 0.041425537809187;
    w[11]= 0.041425537809187;
    
    break;
  }
  default:{
    print_err("unknown integration order is required", __FILE__, __LINE__, __func__);
  }
  }
}



/**
   function assembles coordinates of integration points on tetrahedron
   
   @param gp1,gp2,gp3 - arrays containing volume coordinates L_1, L_2 and L_3
   @param w - array of weigths
   @param order - order of numerical integration
   
   22.8.1997
*/
void gauss_points_tet (double *gp1,double *gp2,double *gp3,double *w,long order)
{
  switch (order){
  case 1:{
    //  order 1
    gp1[0]=0.25;
    
    gp2[0]=0.25;
    
    gp3[0]=0.25;
    
    w[0]=0.166666666666667;
    
    break;
  }
  case 4:{
    //  order 2
    gp1[0]=0.585410196624969;
    gp1[1]=0.138196601125011;
    gp1[2]=0.138196601125011;
    gp1[3]=0.138196601125011;

    gp2[0]=0.138196601125011;
    gp2[1]=0.585410196624969;
    gp2[2]=0.138196601125011;
    gp2[3]=0.138196601125011;


    gp3[0]=0.138196601125011;
    gp3[1]=0.138196601125011;
    gp3[2]=0.585410196624969;
    gp3[3]=0.138196601125011;


    // weight coefficients = 1/4*V = 1/24, their sum has to be equal to 1/6 = (1/2*1*1) * (1/3*1)
    w[0]=0.041666666666667;
    w[1]=0.041666666666667;
    w[2]=0.041666666666667;
    w[3]=0.041666666666667;

    break;
  }
  case 5:{
    //  order 3
    gp1[0]=0.25;
    gp1[1]=0.5;
    gp1[2]=0.166666666666667;
    gp1[3]=0.166666666666667;
    gp1[4]=0.166666666666667;

    gp2[0]=0.25;
    gp2[1]=0.166666666666667;
    gp2[2]=0.5;
    gp2[3]=0.166666666666667;
    gp2[4]=0.166666666666667;

    gp3[0]=0.25;
    gp3[1]=0.166666666666667;
    gp3[2]=0.166666666666667;
    gp3[3]=0.5;
    gp3[4]=0.166666666666667;

    // weight coefficients, their sum has to be equal to 1/6 = (1/2*1*1) * (1/3*1)
    w[0]=-0.133333333333333;
    w[1]=0.075;
    w[2]=0.075;
    w[3]=0.075;
    w[4]=0.075;

    break;
  }
  case 12:{
    //  order 3
    gp1[0]  = 0.094847264914513;
    gp1[1]  = 0.094847264914513;
    gp1[2]  = 0.094847264914513;
    gp1[3]  = 0.094847264914513;
    gp1[4]  = 0.094847264914513;
    gp1[5]  = 0.094847264914513;
    gp1[6]  = 0.241276996823274;
    gp1[7]  = 0.241276996823274;
    gp1[8]  = 0.241276996823274;
    gp1[9]  = 0.569028473347700;
    gp1[10] = 0.569028473347700;
    gp1[11] = 0.569028473347700;

    gp2[0]  = 0.094847264914513;
    gp2[1]  = 0.094847264914513;
    gp2[2]  = 0.241276996823274;
    gp2[3]  = 0.241276996823274;
    gp2[4]  = 0.569028473347700;
    gp2[5]  = 0.569028473347700;
    gp2[6]  = 0.094847264914513;
    gp2[7]  = 0.094847264914513;
    gp2[8]  = 0.569028473347700;
    gp2[9]  = 0.094847264914513;
    gp2[10] = 0.094847264914513;
    gp2[11] = 0.241276996823274;

    gp3[0]  = 0.241276996823274;
    gp3[1]  = 0.569028473347700;
    gp3[2]  = 0.094847264914513;
    gp3[3]  = 0.569028473347700;
    gp3[4]  = 0.094847264914513;
    gp3[5]  = 0.241276996823274;
    gp3[6]  = 0.094847264914513;
    gp3[7]  = 0.569028473347700;
    gp3[8]  = 0.094847264914513;
    gp3[9]  = 0.094847264914513;
    gp3[10] = 0.241276996823274;
    gp3[11] = 0.094847264914513;

    // weight coefficients, their sum has to be equal to 1/6 = (1/2*1*1) * (1/3*1)
    w[0]  = 0.013888888888889;
    w[1]  = 0.013888888888889;
    w[2]  = 0.013888888888889;
    w[3]  = 0.013888888888889;
    w[4]  = 0.013888888888889;
    w[5]  = 0.013888888888889;
    w[6]  = 0.013888888888889;
    w[7]  = 0.013888888888889;
    w[8]  = 0.013888888888889;
    w[9]  = 0.013888888888889;
    w[10] = 0.013888888888889;
    w[11] = 0.013888888888889;
    
    break;
  }
  default:{
    print_err("unknown integration order is required", __FILE__, __LINE__, __func__);
  }
  }
}
